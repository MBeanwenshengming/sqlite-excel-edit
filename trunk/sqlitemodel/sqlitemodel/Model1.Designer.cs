//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace sqlitemodel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class SDB12Entities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“SDB12Entities”部分中的连接字符串初始化新 SDB12Entities 对象。
        /// </summary>
        public SDB12Entities() : base("name=SDB12Entities", "SDB12Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SDB12Entities 对象。
        /// </summary>
        public SDB12Entities(string connectionString) : base(connectionString, "SDB12Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SDB12Entities 对象。
        /// </summary>
        public SDB12Entities(EntityConnection connection) : base(connection, "SDB12Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<mmmqer> mmmqer
        {
            get
            {
                if ((_mmmqer == null))
                {
                    _mmmqer = base.CreateObjectSet<mmmqer>("mmmqer");
                }
                return _mmmqer;
            }
        }
        private ObjectSet<mmmqer> _mmmqer;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 mmmqer EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTommmqer(mmmqer mmmqer)
        {
            base.AddObject("mmmqer", mmmqer);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SDB12Model", Name="mmmqer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mmmqer : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 mmmqer 对象。
        /// </summary>
        /// <param name="recordOrder">RecordOrder 属性的初始值。</param>
        /// <param name="fff">fff 属性的初始值。</param>
        /// <param name="dfs">dfs 属性的初始值。</param>
        public static mmmqer Createmmmqer(global::System.Int32 recordOrder, global::System.Int64 fff, global::System.String dfs)
        {
            mmmqer mmmqer = new mmmqer();
            mmmqer.RecordOrder = recordOrder;
            mmmqer.fff = fff;
            mmmqer.dfs = dfs;
            return mmmqer;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordOrder
        {
            get
            {
                return _RecordOrder;
            }
            set
            {
                if (_RecordOrder != value)
                {
                    OnRecordOrderChanging(value);
                    ReportPropertyChanging("RecordOrder");
                    _RecordOrder = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecordOrder");
                    OnRecordOrderChanged();
                }
            }
        }
        private global::System.Int32 _RecordOrder;
        partial void OnRecordOrderChanging(global::System.Int32 value);
        partial void OnRecordOrderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 fff
        {
            get
            {
                return _fff;
            }
            set
            {
                OnfffChanging(value);
                ReportPropertyChanging("fff");
                _fff = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fff");
                OnfffChanged();
            }
        }
        private global::System.Int64 _fff;
        partial void OnfffChanging(global::System.Int64 value);
        partial void OnfffChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String dfs
        {
            get
            {
                return _dfs;
            }
            set
            {
                OndfsChanging(value);
                ReportPropertyChanging("dfs");
                _dfs = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("dfs");
                OndfsChanged();
            }
        }
        private global::System.String _dfs;
        partial void OndfsChanging(global::System.String value);
        partial void OndfsChanged();

        #endregion
    
    }

    #endregion
    
}
